00000000_00000001_810f0200_0a_0000 //(E_RESET): assert reset 
00000000_00000000_810f0200_0a_0010 //(E_RESET): deassert reset (and wait...)
00000000_00000001_810f0208_0a_0000 //(E_CHIPID): write chipid
00000000_DEADBEEF_810f0208_08_0000 //(E_CHIPID): read chipid
00000000_0000AABB_810f020c_0a_0000 //(E_VERSION): write version
00000000_DEADBEEF_810f020c_08_0000 //(E_VERSION): read version
00000000_00000000_810f0210_0a_0000 //(ETX_CFG): write TX config
00000000_DEADBEEF_810f0210_08_0000 //(ETX_CFG): read config
00000000_DEADBEEF_810f0214_08_0000 //(ETX_STATUS): read status
00000000_87654321_810f0218_0a_0000 //(ETX_GPIO): write tx gpio
00000000_87654321_810f0218_0a_0000 //(ETX_GPIO): read from tx gpio
00000000_87654321_810E0000_0a_0000 //(ETX_MMU): write tx mmu
00000000_00000000_810f0300_0a_0000 //(ERX_CFG): write to RX config
00000000_00000000_810f0300_08_0000 //(ERX_CFG): read from RX config
00000000_00000000_810f0304_0a_0000 //(ERX_STATUS): write to RX status
00000000_00000000_810f0304_08_0000 //(ERX_STATUS): read from RX status
00000000_00000000_810f0308_0a_0000 //(ERX_GPIO): write to RX GPIO
00000000_00000000_810f0308_08_0000 //(ERX_GPIO): read from RX GPIO
00000000_00000000_810e8000_0a_0000 //(ERX_MMU): write to RX mmu
00000000_00000000_810e8000_0a_0000 //(ERX_MMU): write to RX mmu
00000000_00000000_820f0308_0a_0000 //(ERX_MAILBOXLO): write elink1 mailbox-hi
00000000_00000000_820f0310_0a_0000 //(ERX_MAILBOXHI): write elink1 mailbox-low

